题目：老猴子辛苦了一辈子，给那群小猴子们留下了一笔巨大的财富――一大堆桃子。老猴子决定把这些桃子分给小猴子。
第一个猴子来了，它把桃子分成五堆，五堆一样多，但还多出一个。它把剩下的一个留给老猴子，自己拿走其中的一堆。
第二个猴子来了，它把桃子分成五堆，五堆一样多，但又多出一个。它把多出的一个留给老猴子，自己拿走其中的一堆。
后来的小猴子都如此照办。最后剩下的桃子全部留给老猴子。
这里有n只小猴子，请你写个程序计算一下在开始时至少有多少个桃子，以及最后老猴子最少能得到几个桃子。

//解题思路：假设最开始我们拥有x个桃子，因为每一次分桃子分五堆后都剩余1个桃子给老猴子，所以我们暂时借给猴子4个桃子
//所以当我们第一次在分桃子之后现在还剩下（x + 4）*（4 / 5），所以第二次也就剩余（x + 4）*（4 / 5）^2
//第n次分桃子之后我们还有（x + 4）*（4 / 5）^n个桃子，要想最后剩余为整数，所以x = 5^n - 4，最后老猴子
//得到（x + 4）*（4 / 5）^n + n - 4个桃子 = 4^n + n - 4

